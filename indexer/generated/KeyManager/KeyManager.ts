// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class KeyAdded extends ethereum.Event {
  get params(): KeyAdded__Params {
    return new KeyAdded__Params(this);
  }
}

export class KeyAdded__Params {
  _event: KeyAdded;

  constructor(event: KeyAdded) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get ipfsHash(): string {
    return this._event.parameters[1].value.toString();
  }

  get owner(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class KeyDeleted extends ethereum.Event {
  get params(): KeyDeleted__Params {
    return new KeyDeleted__Params(this);
  }
}

export class KeyDeleted__Params {
  _event: KeyDeleted;

  constructor(event: KeyDeleted) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class KeyUpdated extends ethereum.Event {
  get params(): KeyUpdated__Params {
    return new KeyUpdated__Params(this);
  }
}

export class KeyUpdated__Params {
  _event: KeyUpdated;

  constructor(event: KeyUpdated) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get ipfsHash(): string {
    return this._event.parameters[1].value.toString();
  }

  get owner(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class KeyManager__getMyKeysResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get ipfsHash(): string {
    return this[1].toString();
  }

  get isDeleted(): boolean {
    return this[2].toBoolean();
  }
}

export class KeyManager extends ethereum.SmartContract {
  static bind(address: Address): KeyManager {
    return new KeyManager("KeyManager", address);
  }

  getMyKeys(): Array<KeyManager__getMyKeysResultValue0Struct> {
    let result = super.call(
      "getMyKeys",
      "getMyKeys():((uint256,string,bool)[])",
      []
    );

    return result[0].toTupleArray<KeyManager__getMyKeysResultValue0Struct>();
  }

  try_getMyKeys(): ethereum.CallResult<
    Array<KeyManager__getMyKeysResultValue0Struct>
  > {
    let result = super.tryCall(
      "getMyKeys",
      "getMyKeys():((uint256,string,bool)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<KeyManager__getMyKeysResultValue0Struct>()
    );
  }
}

export class AddKeyCall extends ethereum.Call {
  get inputs(): AddKeyCall__Inputs {
    return new AddKeyCall__Inputs(this);
  }

  get outputs(): AddKeyCall__Outputs {
    return new AddKeyCall__Outputs(this);
  }
}

export class AddKeyCall__Inputs {
  _call: AddKeyCall;

  constructor(call: AddKeyCall) {
    this._call = call;
  }

  get _ipfsHash(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class AddKeyCall__Outputs {
  _call: AddKeyCall;

  constructor(call: AddKeyCall) {
    this._call = call;
  }
}

export class SoftDeleteKeyCall extends ethereum.Call {
  get inputs(): SoftDeleteKeyCall__Inputs {
    return new SoftDeleteKeyCall__Inputs(this);
  }

  get outputs(): SoftDeleteKeyCall__Outputs {
    return new SoftDeleteKeyCall__Outputs(this);
  }
}

export class SoftDeleteKeyCall__Inputs {
  _call: SoftDeleteKeyCall;

  constructor(call: SoftDeleteKeyCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SoftDeleteKeyCall__Outputs {
  _call: SoftDeleteKeyCall;

  constructor(call: SoftDeleteKeyCall) {
    this._call = call;
  }
}

export class UpdateKeyCall extends ethereum.Call {
  get inputs(): UpdateKeyCall__Inputs {
    return new UpdateKeyCall__Inputs(this);
  }

  get outputs(): UpdateKeyCall__Outputs {
    return new UpdateKeyCall__Outputs(this);
  }
}

export class UpdateKeyCall__Inputs {
  _call: UpdateKeyCall;

  constructor(call: UpdateKeyCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _ipfsHash(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateKeyCall__Outputs {
  _call: UpdateKeyCall;

  constructor(call: UpdateKeyCall) {
    this._call = call;
  }
}
